http {
  # mime.types: file types list (css, js, img, ...)
  include mime.types;

  server {
    listen 8080;
    root /Users/mac/Program/LearnByMyself/RoadToSeniorDev/NginxCrashCourse/mysite/;

    location /fruits {
      root /Users/mac/Program/LearnByMyself/RoadToSeniorDev/NginxCrashCourse/mysite/;
    }

    location /carbs {
        alias /Users/mac/Program/LearnByMyself/RoadToSeniorDev/NginxCrashCourse/mysite/fruits;
    }

    # prefix match
    location ^~ /test1 {
        return 200 "Hello from test";
    }

    # Exact match
    # location = /test {
    #     return 200 "Hello from test";
    # }

    # REGEX match - case sensitive
    # location ~ /test[0-9] {
    #     return 200 "Hello from test";
    # }

    rewrite ^/number/(\w+) /test/$1;

    # REGEX match - case insensitive
    location ~* /test/[0-9] {
        return 200 "Hello from haha test";
    }

    location /not-found {
        return 404 "Bruhhh, not found";
    }

    location /vegetables {
        root /Users/mac/Program/LearnByMyself/RoadToSeniorDev/NginxCrashCourse/mysite/;
        try_files /vegetables/veggies.html /index.html =404;
    }

    location ~* /count/[0-9] {
        root /Users/mac/Program/LearnByMyself/RoadToSeniorDev/NginxCrashCourse/mysite/;
        try_files /index.html =404;
    }

    location /crops {
        return 307 /fruits;
    }

    # Check static API key
    # if ( $arg_apikey != 1234 ) {
    #     return 401 "Incorrect API key";
    # }

    set $thur 'No';

    if ( $date_local ~ 'Thursday' ) {
        set $thur 'Yes';
    }

    location /inspect {
        return 200 "Thursday = $thur";
    }

    rewrite ^/user/(\w+) /greet/$1;
    rewrite ^/greet/john index.html;

    location = /greet/john {
        return 200 "Hello john";
    }
  }
}

events {}